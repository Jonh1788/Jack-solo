{
  "version": 3,
  "sources": ["../../laravel-echo-api-gateway/dist/laravel-echo-api-gateway.js"],
  "sourcesContent": ["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nclass Connector {\r\n    /**\r\n     * Create a new class instance.\r\n     */\r\n    constructor(options) {\r\n        /**\r\n         * Default connector options.\r\n         */\r\n        this._defaultOptions = {\r\n            auth: {\r\n                headers: {},\r\n            },\r\n            authEndpoint: '/broadcasting/auth',\r\n            broadcaster: 'pusher',\r\n            csrfToken: null,\r\n            host: null,\r\n            key: null,\r\n            namespace: 'App.Events',\r\n        };\r\n        this.setOptions(options);\r\n        this.connect();\r\n    }\r\n    /**\r\n     * Merge the custom options with the defaults.\r\n     */\r\n    setOptions(options) {\r\n        this.options = Object.assign(this._defaultOptions, options);\r\n        if (this.csrfToken()) {\r\n            this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\r\n        }\r\n        return options;\r\n    }\r\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\r\n    csrfToken() {\r\n        let selector;\r\n        if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\r\n            return window['Laravel'].csrfToken;\r\n        }\r\n        else if (this.options.csrfToken) {\r\n            return this.options.csrfToken;\r\n        }\r\n        else if (typeof document !== 'undefined' &&\r\n            typeof document.querySelector === 'function' &&\r\n            (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\r\n            return selector.getAttribute('content');\r\n        }\r\n        return null;\r\n    }\r\n}\n\nvar Websocket = /*#__PURE__*/function () {\n  function Websocket(options) {\n    var _this = this;\n\n    _classCallCheck(this, Websocket);\n\n    this.buffer = [];\n    this.listeners = {};\n    this.internalListeners = {};\n    this.channelBacklog = [];\n    this.options = options;\n    this.websocket = new WebSocket(options.host);\n\n    this.websocket.onopen = function () {\n      while (_this.buffer.length) {\n        var message = _this.buffer[0];\n\n        _this.send(message);\n\n        _this.buffer.splice(0, 1);\n      }\n    };\n\n    this.websocket.onmessage = function (messageEvent) {\n      var message = _this.parseMessage(messageEvent.data);\n\n      if (!message) {\n        return;\n      }\n\n      if (message.channel) {\n        console.log(\"Received event \".concat(message.event, \" on channel \").concat(message.channel));\n\n        if (_this.listeners[message.channel] && _this.listeners[message.channel][message.event]) {\n          _this.listeners[message.channel][message.event](message.data);\n        }\n\n        return;\n      }\n\n      if (_this.internalListeners[message.event]) {\n        _this.internalListeners[message.event](message.data);\n      }\n    };\n\n    this.on('whoami', function (_ref) {\n      var socketId = _ref.socket_id;\n      _this.socketId = socketId;\n      console.log(\"just set socketId to \".concat(socketId));\n\n      while (_this.channelBacklog.length) {\n        var channel = _this.channelBacklog[0];\n\n        _this.actuallySubscribe(channel);\n\n        _this.channelBacklog.splice(0, 1);\n      }\n    });\n    this.send({\n      event: 'whoami'\n    }); // send ping every 60 seconds to keep connection alive\n\n    this.pingInterval = setInterval(function () {\n      console.log('Sending ping');\n\n      _this.send({\n        event: 'ping'\n      });\n    }, 60 * 1000);\n    return this;\n  }\n\n  _createClass(Websocket, [{\n    key: \"parseMessage\",\n    value: function parseMessage(body) {\n      try {\n        return JSON.parse(body);\n      } catch (error) {\n        console.error(error);\n        return undefined;\n      }\n    }\n  }, {\n    key: \"getSocketId\",\n    value: function getSocketId() {\n      return this.socketId;\n    }\n  }, {\n    key: \"socketIsReady\",\n    value: function socketIsReady() {\n      return this.websocket.readyState === this.websocket.OPEN;\n    }\n  }, {\n    key: \"send\",\n    value: function send(message) {\n      if (this.socketIsReady()) {\n        this.websocket.send(JSON.stringify(message));\n        return;\n      }\n\n      this.buffer.push(message);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.internalListeners = {};\n      clearInterval(this.pingInterval);\n      this.pingInterval = undefined;\n      this.websocket.close();\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(channel) {\n      if (this.getSocketId()) {\n        this.actuallySubscribe(channel);\n      } else {\n        this.channelBacklog.push(channel);\n      }\n    }\n  }, {\n    key: \"actuallySubscribe\",\n    value: function actuallySubscribe(channel) {\n      var _this2 = this;\n\n      if (channel.name.startsWith('private-') || channel.name.startsWith('presence-')) {\n        console.log(\"Sending auth request for channel \".concat(channel.name));\n        axios.post(this.options.authEndpoint, {\n          socket_id: this.getSocketId(),\n          channel_name: channel.name\n        }).then(function (response) {\n          console.log(\"Subscribing to channels \".concat(channel.name));\n\n          _this2.send({\n            event: 'subscribe',\n            data: {\n              channel: channel.name,\n              auth: response.data.auth\n            }\n          });\n        })[\"catch\"](function (error) {\n          console.log(\"Auth request for channel \".concat(channel.name, \" failed\"));\n          console.error(error);\n        });\n      } else {\n        console.log(\"Subscribing to channels \".concat(channel.name));\n        this.send({\n          event: 'subscribe',\n          data: {\n            channel: channel.name\n          }\n        });\n      }\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(channel) {\n      this.send({\n        event: 'unsubscribe',\n        data: {\n          channel: channel.name\n        }\n      });\n\n      if (this.listeners[channel.name]) {\n        delete this.listeners[channel.name];\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(event) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      this.internalListeners[event] = callback;\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(channel, event, callback) {\n      if (!this.listeners[channel.name]) {\n        this.listeners[channel.name] = {};\n      }\n\n      this.listeners[channel.name][event] = callback;\n    }\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(channel, event) {\n      var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (this.internalListeners[event] && (callback === null || this.internalListeners[event] === callback)) {\n        delete this.internalListeners[event];\n      }\n    }\n  }]);\n\n  return Websocket;\n}();\n\n/**\r\n * Event name formatter\r\n */\r\nclass EventFormatter {\r\n    /**\r\n     * Create a new class instance.\r\n     */\r\n    constructor(namespace) {\r\n        this.setNamespace(namespace);\r\n    }\r\n    /**\r\n     * Format the given event name.\r\n     */\r\n    format(event) {\r\n        if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\r\n            return event.substr(1);\r\n        }\r\n        else if (this.namespace) {\r\n            event = this.namespace + '.' + event;\r\n        }\r\n        return event.replace(/\\./g, '\\\\');\r\n    }\r\n    /**\r\n     * Set the event namespace.\r\n     */\r\n    setNamespace(value) {\r\n        this.namespace = value;\r\n    }\r\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\r\nclass Channel {\r\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\r\n    listenForWhisper(event, callback) {\r\n        return this.listen('.client-' + event, callback);\r\n    }\r\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\r\n    notification(callback) {\r\n        return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\r\n    }\r\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\r\n    stopListeningForWhisper(event, callback) {\r\n        return this.stopListening('.client-' + event, callback);\r\n    }\r\n}\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar Channel$1 = /*#__PURE__*/function (_BaseChannel) {\n  _inherits(Channel, _BaseChannel);\n\n  var _super = _createSuper(Channel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Channel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, Channel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options[\"namespace\"]);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(Channel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.subscribe(this);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.socket.unsubscribe(this);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.socket.unbindEvent(this, event, callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.socket.bind(this, event, callback);\n      return this;\n    }\n  }, {\n    key: \"whisper\",\n    value: function whisper(event, data) {\n      this.socket.send({\n        event: event,\n        data: data\n      });\n      return this;\n    }\n  }, {\n    key: \"here\",\n    value: function here(callback) {\n      // TODO: implement\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      // TODO: implement\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      // TODO: implement\n      return this;\n    }\n  }]);\n\n  return Channel;\n}(Channel);\n\nvar broadcaster = function broadcaster(options) {\n  return new Connector$1(options);\n};\nvar Connector$1 = /*#__PURE__*/function (_BaseConnector) {\n  _inherits(Connector, _BaseConnector);\n\n  var _super = _createSuper(Connector);\n\n  function Connector() {\n    var _this;\n\n    _classCallCheck(this, Connector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"connect\",\n    value: function connect() {\n      this.socket = new Websocket(this.options);\n      return; //\n      // this.socket.on('reconnect', () => {\n      //     Object.values(this.channels).forEach((channel) => {\n      //         channel.subscribe();\n      //     });\n      // });\n      //\n      // return this.socket;\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new Channel$1(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new Channel$1(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new Channel$1(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.getSocketId();\n    }\n    /**\r\n     * Disconnect socket connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.close();\n    }\n  }]);\n\n  return Connector;\n}(Connector);\n\nexport { Connector$1 as Connector, broadcaster };\n"],
  "mappings": "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",
  "names": ["_getPrototypeOf", "o", "_setPrototypeOf", "p", "Websocket", "Channel", "broadcaster", "Connector", "name"]
}
