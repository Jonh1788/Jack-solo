import { EventFormatter } from 'laravel-echo/src/util';
import { Channel as BaseChannel } from 'laravel-echo/src/channel/channel';
import { PresenceChannel } from "laravel-echo/src/channel";
import { Websocket } from "./Websocket";
/**
 * This class represents a Pusher channel.
 */
export declare class Channel extends BaseChannel implements PresenceChannel {
    /**
     * The Pusher client instance.
     */
    socket: Websocket;
    /**
     * The name of the channel.
     */
    name: string;
    /**
     * Channel options.
     */
    options: object;
    /**
     * The event formatter.
     */
    eventFormatter: EventFormatter;
    /**
     * Create a new class instance.
     */
    constructor(socket: Websocket, name: string, options: object);
    /**
     * Subscribe to a Pusher channel.
     */
    subscribe(): any;
    /**
     * Unsubscribe from a Pusher channel.
     */
    unsubscribe(): void;
    /**
     * Listen for an event on the channel instance.
     */
    listen(event: string, callback: Function): Channel;
    /**
     * Stop listening for an event on the channel instance.
     */
    stopListening(event: string, callback?: Function): Channel;
    /**
     * Register a callback to be called anytime a subscription succeeds.
     */
    subscribed(callback: Function): Channel;
    /**
     * Register a callback to be called anytime a subscription error occurs.
     */
    error(callback: Function): Channel;
    /**
     * Bind a channel to an event.
     */
    on(event: string, callback: Function): Channel;
    whisper(event: string, data: object): Channel;
    here(callback: Function): Channel;
    /**
     * Listen for someone joining the channel.
     */
    joining(callback: Function): Channel;
    /**
     * Listen for someone leaving the channel.
     */
    leaving(callback: Function): Channel;
}
