import { Channel } from "./Channel";
export declare type Options = {
    authEndpoint: string;
    host: string;
};
export declare type MessageBody = {
    event: string;
    channel?: string;
    data: object;
};
export declare class Websocket {
    buffer: Array<object>;
    options: Options;
    websocket: WebSocket;
    private listeners;
    private internalListeners;
    private channelBacklog;
    private socketId;
    private pingInterval;
    constructor(options: Options);
    protected parseMessage(body: string): MessageBody;
    getSocketId(): string;
    private socketIsReady;
    send(message: object): void;
    close(): void;
    subscribe(channel: Channel): void;
    private actuallySubscribe;
    unsubscribe(channel: Channel): void;
    on(event: string, callback?: Function): void;
    bind(channel: Channel, event: string, callback: Function): void;
    unbindEvent(channel: Channel, event: string, callback?: Function): void;
}
